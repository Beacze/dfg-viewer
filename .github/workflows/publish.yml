name: Publish DFG-Viewer

on:
    push:
        branches: [ "master" ]
    workflow_dispatch: # run manually

jobs:
    build-publish:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./Docker
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            # Deprecated should be set to the main repository if the update-typo12 branch is merged.
            - name: Checkout DFG-Viewer repository
              uses: actions/checkout@v4
              with:
                  repository: markusweigelt/dfg-viewer
                  ref: update-typo12
                  path: ./Docker/build/extensions/dfg-viewer

            - name: Checkout Kitodo.Presentation repository
              uses: actions/checkout@v4
              with:
                  repository: kitodo/kitodo-presentation
                  path: ./Docker/extensions/kitodo-presentation

            # Deprecated should be set to the main repository if the update-typo12 branch is merged.
            - name: Checkout SLUB Digital Collections repository
              uses: actions/checkout@v4
              with:
                  repository: markusweigelt/slub_digitalcollections
                  ref: update-typo12
                  path: ./Docker/build/extensions/slub_digitalcollections

            - name: Prepare environment
              run: |
                  # Rename example .env file
                  mv .env.example .env

                  # Replace required versions with @dev
                  cd ./build/extensions/
                  echo "`jq '.require."kitodo/presentation"="@dev"' dfg-viewer/composer.json`" > dfg-viewer/composer.json
                  echo "`jq '.require."slub/slub-digitalcollections"="@dev"' dfg-viewer/composer.json`" > dfg-viewer/composer.json
                  echo "`jq '.require."kitodo/presentation"="@dev"' slub_digitalcollections/composer.json`" > slub_digitalcollections/composer.json

            - name: Determine build args
              run: |
                  date -u +"build_date=%Y-%m-%dT%H:%M:%SZ" >> $GITHUB_ENV
                  echo "vcs_ref=`git -C ./build/extensions/dfg-viewer rev-parse HEAD`" >> $GITHUB_ENV

            # Activate cache export feature to reduce build time of images
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build the DFG-Viewer image
              uses: docker/build-push-action@v6
              with:
                  context: ./build
                  tags: ghcr.io/${{ github.repository }}:latest
                  build-args: |
                      BUILD_DATE=${{ env.build_date }}
                      VCS_REF=${{ env.vcs_ref }}
                      VCS_URL=https://github.com/${{ github.repository }}/tree/${{ github.ref_name }}/

            - name: Test the DFG-Viewer image
              run: ./../.github/scripts/test-image.sh

            - name: Collect docker logs on failure
              if: failure()
              uses: jwalton/gh-docker-logs@v2
              with:
                  dest: './docker-logs'

            - name: Tar docker logs on failure
              if: failure()
              run: tar cvzf ./docker-logs.tgz ./docker-logs

            - name: Upload docker logs to GitHub
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: docker-logs.tgz
                  path: ./docker-logs.tgz

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Deploy to GitHub Container Repository
              run: docker image push ghcr.io/${{ github.repository }}:latest
